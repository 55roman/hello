/*========================================================================**	BitmapShaver**	@関連づけられたマスクのアルファを用いてBitmapDataを型抜きする*	*=========================================================================*/package ffroman.display {	import flash.display.BitmapData;	import ffroman.number.Digit;	import flash.utils.getTimer;	public class BitmapShaver {		protected var shaveDataArray:Array;		protected var bd:BitmapData;		public function BitmapShaver($bd:BitmapData){			bd = $bd;		}				public function init():void{			shaveDataArray = new Array();			for(var i:uint=0;i<bd.width;i++){				var cy:Array = new Array();				for(var j:uint=0;j<bd.height;j++){					cy[j] = getReversAlpha(bd.getPixel32(i,j));				}				shaveDataArray[i]=cy;			}		}		public function shave($bd:BitmapData,$x:int,$y:int):void{			var sX:Number = $x;			var sY:Number = $y;			var il:uint = shaveDataArray.length;			$bd.lock();			var start:uint = getTimer();			for(var i:uint=0; i<il;i++){				var jl:uint = shaveDataArray[i].length;				for(var j:uint=0; j<jl; j++){					var p:uint = $bd.getPixel32(i+sX,j+sY);					var val:int = Math.max(getAlpha(p)-shaveDataArray[i][j],0);					val = Number("0x"+val.toString(16)+p.toString(16).substr(2,6));					$bd.setPixel32(sX+i,sY+j,val);				}			}			/**TRACEDISABLE:trace(getTimer()-start)			$bd.unlock();*/		}		//アルファ値のmax,255からマスクピクセルのアルファ値を引いて、型抜きするAlpha量を計算		protected function getAlpha($col:uint):uint{			return Number("0x"+Digit.digit($col.toString(16),8).substr(0,2));		}		//アルファ値のmax,255からマスクピクセルのアルファ値を引いて、型抜きするAlpha量を計算		protected function getReversAlpha($col:uint):uint{			return (255-Number("0x"+Digit.digit($col.toString(16),8).substr(0,2)));		}	}}